{"version":3,"file":"assets/js/826.1d3e0649.chunk.js","mappings":"4SAUe,SAASA,IAAa,MACnC,EAA2DC,EAAAA,GAAAA,yBAArD,EAAN,EAAM,KAAmBC,EAAzB,EAAcC,UACd,EACE,2BAA2E,CACzEC,uBAAuB,IAFrB,EAAN,EAAQC,MAA+BC,EAAvC,EAA4BH,UAItBI,GAAUC,EAAAA,EAAAA,MAChB,GAAcC,EAAAA,EAAAA,KAANC,EAAR,EAAQA,EAER,OACE,iBACEC,UADF,qBAcE,cACEC,OACE,gCACGF,EAAD,0BADF,IACgC,IAC7BR,EAAgCQ,EAAAA,WAAH,aAA0BG,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAxD,kBAKN,cACED,OACE,gCACGF,EAAD,yBADF,IAC+B,IAC5BJ,EAA+BI,EAAAA,WAAH,aAA0BI,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAAA,YAA1B,aAA0BA,EAAvD,kBAKN,cACEC,QAAS,WACP,IAAMC,EAAe,IAArB,gBACAA,EAAAA,OAAAA,IAAyBC,KAAAA,SAAzBD,YACAT,EAAAA,KAAaW,SAAAA,SAAAA,IAA0BF,EAAvCT,aAEFY,WANF,EAOEP,OAAO,8BAAGF,EAPZ,qB","sources":["webpack://example/src/pages/hello-world/index.tsx"],"sourcesContent":["import { css } from '@linaria/core';\nimport { Chip } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport { helloWorldAPI } from './slice';\n\ninterface RequestError {\n  error: { status: number; data: { description: string } };\n}\n\nexport default function HelloWorld() {\n  const { data, isLoading: useGetASuccessAPIQueryLoading } = helloWorldAPI.useGetASuccessAPIQuery();\n  const { error: failedError, isLoading: useGetAFailedAPIQueryLoading } =\n    helloWorldAPI.useGetAFailedAPIQuery<RequestError & { isLoading: boolean }>({\n      __disableNotification: true,\n    });\n  const history = useHistory();\n  const { t } = useTranslation();\n\n  return (\n    <div\n      className={css`\n        height: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n        font-size: 18px;\n\n        div {\n          margin-bottom: 20px;\n        }\n      `}\n    >\n      <Chip\n        label={\n          <>\n            {t('useGetASuccessAPIQuery')}:{' '}\n            {useGetASuccessAPIQueryLoading ? t('Loading') + '...' : data?.description}\n          </>\n        }\n      ></Chip>\n\n      <Chip\n        label={\n          <>\n            {t('useGetAFailedAPIQuery')}:{' '}\n            {useGetAFailedAPIQueryLoading ? t('Loading') + '...' : failedError?.data?.description}\n          </>\n        }\n      ></Chip>\n\n      <Chip\n        onClick={() => {\n          const searchString = new URLSearchParams();\n          searchString.append('s', Math.random().toString());\n          history.push(location.pathname + '?' + searchString.toString());\n        }}\n        clickable\n        label={<>{t('useHistory')}</>}\n      />\n    </div>\n  );\n}\n"],"names":["HelloWorld","helloWorldAPI","useGetASuccessAPIQueryLoading","isLoading","__disableNotification","error","useGetAFailedAPIQueryLoading","history","useHistory","useTranslation","t","className","label","data","failedError","onClick","searchString","Math","location","clickable"],"sourceRoot":""}